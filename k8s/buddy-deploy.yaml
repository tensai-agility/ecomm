---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: postgres-storage-class
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap 
metadata:
  name: postgres-secret
  labels:
    app: postgres
data:
  POSTGRES_USER: tensai
  POSTGRES_PASSWORD: tensai@33
  POSTGRES_DB: ecommerce
  PGDATA: /var/lib/postgresql/data/db-files/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      name: postgres-pod
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres-container
        image: postgres:latest
        ports:
        - containerPort: 5432
        #resources:
          #limits:
            #cpu: "250m"
            #memory: "250Mi"
          #requests:
            #cpu: "100m"
            #memory: "100Mi"
        envFrom:
        - configMapRef:
            name: postgres-secret
        volumeMounts:
        - name: postgres-volume
          mountPath: /var/lib/postgresql/data
      volumes:
      -  name: postgres-volume
         persistentVolumeClaim:
           claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  #type: LoadBalancer
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: postgres-storage-class
provisioner: disk.csi.azure.com
allowVolumeExpansion: true
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
parameters:
  skuname: StandardSSD_LRS
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecomapi-deployment
  labels:
    app: ecomapideploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecomapipod
  template:
    metadata:
      name: ecomapi-pod
      labels:
        app: ecomapipod
    spec:
      containers:
      - name: ecomapicon
        image: hexadevops/ecomapi:latest
        ports:
        - containerPort: 8080
        #resources:
          #limits:
            #cpu: "250m"
            #memory: "250Mi"
          #requests:
            #cpu: "100m"
            #memory: "100Mi"
---
apiVersion: v1
kind: Service 
metadata:
  name: ecomm-backend-service
  labels:
    app: ecomm-backend-service
spec:
  type: LoadBalancer
  selector:
    app: ecomapipod
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecomm-frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      name: ecomm-frontend-pod
      labels:
        app: frontend
    spec:
      containers:
      - name: ecomm-frontend
        image: hexadevops/ecomui:latest
        ports:
        - containerPort: 3000
        #resources:
          #limits:
            #cpu: "250m"
            #memory: "250Mi"
          #requests:
            #cpu: "100m"
            #memory: "100Mi"
---
apiVersion: v1
kind: Service 
metadata:
  name: ecomm-frontend-service
  labels:
    app: frontend
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - targetPort: 3000
    port: 3000
